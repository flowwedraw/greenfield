# getPriorityFeeEstimate

> Calculate optimal priority fee recommendations for Solana transactions based on real-time 
network conditions. This advanced API analyzes historical fee data and current congestion 
levels to provide precise fee estimates for different priority levels.


## OpenAPI

````yaml openapi/priority-fee-api/getPriorityFeeEstimate.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    default: '2.0'
                    description: >-
                      JSON-RPC version identifier for the Solana RPC API
                      request, must be "2.0"
              id:
                allOf:
                  - type: string
                    default: '1'
                    description: Client-generated identifier for the request
              method:
                allOf:
                  - type: string
                    enum:
                      - getPriorityFeeEstimate
                    default: getPriorityFeeEstimate
                    description: The RPC method name
              params:
                allOf:
                  - type: array
                    description: Parameters for the method call
                    default:
                      - transaction: >-
                          LxzhDW7TapzziJVHEGPh1QjmZB6kjNqmvuJ9gmihBGEkzw2N8ospDq32UZdVmKWzRZqKuyvhp7xmLvsmmHa3MfxVKpYoLV9cPkw5isHnHgDUwLSMsDaZ4dLEULexXAvuV9k6fLD2LMhFKM6gqH6j69GQLAm1g4e3z5ZVZN6pmJdSmZ4PqKcwNn4sS7E3Abp1hV59uBJB9i4jEdEAh28rZ8WCeNizzEmrJZFhatFFFGSDsk23jDPEjbkMcoRWXKf1WthFScC2S6Wz284Dtjqp7kW8eybV3DpmN9DtBbcfFNQPtUwmiBZCKszdYym5AjJvRHiUKUdMwFpC3toPnMvTmKZ9iHQtzZRkg5xBufRtUN5eVYJfdw2DxzH6RfqhC2rAjfSbfJA4wmaq9f5eUe2iEjmqvne6r85PPcHBJzyqkVtAyUFtTc9DfU8UiM9rFhQ2UB71M6m5UCsC6EwowMw5k8iF8rL7iPCLdubVdy8S58DPLNG4E4rdosev1T63YdRWSgEwBZh7iX4zGBA9AKAm3B9itCSxLSL46Y6uZgVku9UXsMcWWz3URoa6hRbo55CYPLhrVeqjqX5DsXpaG6QkngbEaESQUnkakE1AFkYXmNXEd2m3sLRTYB2o5UTkwkJS2u5sJHyYqAvXr3vFZr7qAYFLD3LwS5tsdb45ZQVQwsbnNddMHgkpmSqLHS6Fv1epxqHbzpRCU1tgMsriApVWC3pj2LLD41HxkV8aKvkVyHgJFACUtbvRBZAasHf1F71Gz3qZNTdh3efWsZJRXnfxKPbATU7NTMaMUL8JjknfoVwp3
                    items:
                      type: object
                      properties:
                        transaction:
                          type: string
                          description: >
                            Base58 or Base64 encoded Solana transaction for
                            which to estimate optimal priority fees.

                            The API will analyze the specific instructions and
                            accounts in this transaction to provide

                            accurate fee estimates based on current network
                            conditions and computational complexity.
                        accountKeys:
                          type: array
                          description: >-
                            Array of Solana account public keys to estimate
                            priority fees for (alternative to providing a
                            transaction)
                          items:
                            type: string
                            description: Base58 encoded public key of a Solana account
                        options:
                          $ref: '#/components/schemas/PriorityFeeOptions'
            required: true
            refIdentifier: '#/components/schemas/PriorityFeeEstimateRequest'
        examples:
          transactionExample:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getPriorityFeeEstimate
              params:
                - transaction: >-
                    LxzhDW7TapzziJVHEGPh1QjmZB6kjNqmvuJ9gmihBGEkzw2N8ospDq32UZdVmKWzRZqKuyvhp7xmLvsmmHa3MfxVKpYoLV9cPkw5isHnHgDUwLSMsDaZ4dLEULexXAvuV9k6fLD2LMhFKM6gqH6j69GQLAm1g4e3z5ZVZN6pmJdSmZ4PqKcwNn4sS7E3Abp1hV59uBJB9i4jEdEAh28rZ8WCeNizzEmrJZFhatFFFGSDsk23jDPEjbkMcoRWXKf1WthFScC2S6Wz284Dtjqp7kW8eybV3DpmN9DtBbcfFNQPtUwmiBZCKszdYym5AjJvRHiUKUdMwFpC3toPnMvTmKZ9iHQtzZRkg5xBufRtUN5eVYJfdw2DxzH6RfqhC2rAjfSbfJA4wmaq9f5eUe2iEjmqvne6r85PPcHBJzyqkVtAyUFtTc9DfU8UiM9rFhQ2UB71M6m5UCsC6EwowMw5k8iF8rL7iPCLdubVdy8S58DPLNG4E4rdosev1T63YdRWSgEwBZh7iX4zGBA9AKAm3B9itCSxLSL46Y6uZgVku9UXsMcWWz3URoa6hRbo55CYPLhrVeqjqX5DsXpaG6QkngbEaESQUnkakE1AFkYXmNXEd2m3sLRTYB2o5UTkwkJS2u5sJHyYqAvXr3vFZr7qAYFLD3LwS5tsdb45ZQVQwsbnNddMHgkpmSqLHS6Fv1epxqHbzpRCU1tgMsriApVWC3pj2LLD41HxkV8aKvkVyHgJFACUtbvRBZAasHf1F71Gz3qZNTdh3efWsZJRXnfxKPbATU7NTMaMUL8JjknfoVwp3/SsAUIMHFzjQMQmoiQMSL1q+S+r9dLR55BgaWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG3fbh12Whk9nL4UbO63msHLSF7V9bN5E6jPWFfv8AqQECAwABDAIAAAAEAAAAAAAA
          accountKeysExample:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getPriorityFeeEstimate
              params:
                - accountKeys:
                    - 2CiBfRKcERi2GgYn83UaGo1wFaYHHrXGGfnDaa2hxdEA
                  options:
                    includeAllPriorityFeeLevels: true
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: JSON-RPC version identifier
              id:
                allOf:
                  - type: string
                    description: Client-generated identifier matching the request
              result:
                allOf:
                  - type: object
                    description: >-
                      Result object containing comprehensive Solana priority fee
                      estimates
                    properties:
                      priorityFeeEstimate:
                        type: number
                        format: float
                        description: >
                          Estimated optimal priority fee in microlamports for
                          the requested Solana transaction,

                          calculated based on recent blockchain activity and
                          computational requirements.
                      priorityFeeLevels:
                        type: object
                        description: >
                          Detailed fee estimates for different priority levels
                          on the Solana blockchain (in microlamports),

                          allowing developers to choose the optimal balance
                          between cost and confirmation speed.
                        properties:
                          min:
                            type: number
                            format: float
                            description: >
                              Minimum viable fee for Solana transactions -
                              suitable for non-urgent transactions during low
                              congestion periods

                              (may result in transaction failure during network
                              congestion)
                          low:
                            type: number
                            format: float
                            description: >
                              Low priority fee for Solana transactions -
                              economical option for transactions that aren't
                              time-sensitive

                              (longer confirmation time, lower cost)
                          medium:
                            type: number
                            format: float
                            description: >
                              Medium priority fee for Solana transactions -
                              balanced option for most standard transactions

                              (reasonable confirmation time with moderate cost)
                          high:
                            type: number
                            format: float
                            description: >
                              High priority fee for Solana transactions -
                              prioritized processing for time-sensitive
                              operations

                              like DeFi trades or NFT mints (faster
                              confirmation, higher cost)
                          veryHigh:
                            type: number
                            format: float
                            description: >
                              Very high priority fee for Solana transactions -
                              premium option for critical transactions requiring

                              near-immediate confirmation (very fast
                              confirmation, premium cost)
                          unsafeMax:
                            type: number
                            format: float
                            description: >
                              Maximum observed fee on Solana - the highest fee
                              seen in the analysis window, representing

                              an upper bound during extreme congestion (fastest
                              possible confirmation, but potentially
                              unnecessarily high)
            refIdentifier: '#/components/schemas/PriorityFeeEstimateResponse'
        examples:
          singleEstimateResponse:
            value:
              jsonrpc: '2.0'
              result:
                priorityFeeEstimate: 120000
              id: '1'
          allLevelsResponse:
            value:
              jsonrpc: '2.0'
              result:
                priorityFeeLevels:
                  min: 0
                  low: 2
                  medium: 10082
                  high: 100000
                  veryHigh: 1000000
                  unsafeMax: 50000000
              id: '1'
        description: Successfully retrieved Solana priority fee estimates
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: JSON-RPC version identifier
              error:
                allOf:
                  - type: object
                    description: Error information
                    properties:
                      code:
                        type: integer
                        example: -32602
                        description: Error code
                      message:
                        type: string
                        example: Invalid params
                        description: Error message
              id:
                allOf:
                  - type: string
                    description: Client-generated identifier matching the request
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: <string>
        description: Bad request
  deprecated: false
  type: path
components:
  schemas:
    PriorityFeeOptions:
      type: object
      description: >-
        Advanced options for customizing Solana priority fee estimation based on
        network conditions
      properties:
        transactionEncoding:
          type: string
          enum:
            - Base58
            - Base64
          description: Encoding format of the provided Solana transaction
        priorityLevel:
          type: string
          enum:
            - Min
            - Low
            - Medium
            - High
            - VeryHigh
            - UnsafeMax
          description: >-
            Specific priority level to estimate fees for based on current Solana
            network congestion
        includeAllPriorityFeeLevels:
          type: boolean
          description: >-
            When true, returns comprehensive estimates for all priority levels
            from minimum to maximum
        lookbackSlots:
          type: integer
          minimum: 1
          maximum: 150
          description: >-
            Number of recent Solana blockchain slots to analyze for accurate fee
            estimation (1-150)
        includeVote:
          type: boolean
          description: >-
            When true, includes vote transactions in the fee calculation for
            more comprehensive analysis
        recommended:
          type: boolean
          description: >-
            When true, returns the recommended optimal fee based on current
            Solana network conditions
        evaluateEmptySlotAsZero:
          type: boolean
          description: >-
            When true, slots with no transactions are counted as zero-fee slots
            in the calculation

````