# getSignatureStatuses

> Returns the statuses of a list of signatures. Each signature must be a txid, the first signature of a transaction.

## OpenAPI

````yaml openapi/rpc-http/getSignatureStatuses.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The JSON-RPC protocol version.
                    example: '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    enum:
                      - getSignatureStatuses
                    description: The name of the RPC method to invoke.
                    example: getSignatureStatuses
                    default: getSignatureStatuses
              params:
                allOf:
                  - type: array
                    description: >-
                      Array containing transaction signatures and optional
                      configuration object.
                    default:
                      - - >-
                          5VERv8NMvzbJMEkV8xnrLkEaWRtSz9CosKDYjCJjBRnbJLgp8uirBgmQpjKhoR4tjF3ZpRzrFmBV6UjKdiSZkQUW
                    items:
                      oneOf:
                        - type: array
                          description: >-
                            Array of transaction signatures (up to 256), as
                            base-58 encoded strings.
                          items:
                            type: string
                            example: >-
                              5VERv8NMvzbJMEkV8xnrLkEaWRtSz9CosKDYjCJjBRnbJLgp8uirBgmQpjKhoR4tjF3ZpRzrFmBV6UjKdiSZkQUW
                        - type: object
                          description: Configuration options.
                          properties:
                            searchTransactionHistory:
                              type: boolean
                              description: >-
                                Enable searching beyond recent status cache to
                                find older historical transactions.
                              example: true
            required: true
        examples:
          requestExample:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getSignatureStatuses
              params:
                - - >-
                    5VERv8NMvzbJMEkV8xnrLkEaWRtSz9CosKDYjCJjBRnbJLgp8uirBgmQpjKhoR4tjF3ZpRzrFmBV6UjKdiSZkQUW
                - searchTransactionHistory: true
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The JSON-RPC protocol version.
                    example: '2.0'
              id:
                allOf:
                  - type: string
                    description: Identifier matching the request.
                    example: '1'
              result:
                allOf:
                  - type: object
                    description: Contains the context and signature status values.
                    properties:
                      context:
                        type: object
                        properties:
                          slot:
                            type: integer
                            description: Slot in which the data was fetched.
                            example: 82
                      value:
                        type: array
                        description: List of transaction signature statuses.
                        items:
                          oneOf:
                            - type: 'null'
                              description: Null if the transaction is unknown.
                            - type: object
                              properties:
                                slot:
                                  type: integer
                                  description: >-
                                    Solana blockchain slot number where this
                                    transaction was included in a block.
                                  example: 48
                                confirmations:
                                  oneOf:
                                    - type: integer
                                      description: >-
                                        Number of confirmed blocks since this
                                        transaction was processed (null if fully
                                        finalized).
                                    - type: 'null'
                                      description: >-
                                        Null indicates transaction has reached
                                        maximum finality (rooted).
                                  example: 48
                                err:
                                  oneOf:
                                    - type: object
                                      description: >-
                                        Error object containing details if the
                                        transaction failed during execution.
                                    - type: 'null'
                                      description: >-
                                        Null indicates the transaction executed
                                        successfully without errors.
                                  example: null
                                confirmationStatus:
                                  type: string
                                  enum:
                                    - processed
                                    - confirmed
                                    - finalized
                                  description: >-
                                    Current finality status of the transaction
                                    on the Solana network (processed → confirmed
                                    → finalized).
                                  example: finalized
        examples:
          responseExample:
            value:
              jsonrpc: '2.0'
              id: '1'
              result:
                context:
                  slot: 82
                value:
                  - slot: 48
                    confirmations: 48
                    err: null
                    confirmationStatus: finalized
                  - null
        description: Successfully retrieved signature statuses.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````