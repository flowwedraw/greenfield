# getMultipleNewAddressProofsV2

> Returns proofs that the new addresses are not taken already and can be created.

## OpenAPI

````yaml openapi/zk-compression/getMultipleNewAddressProofsV2.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The version of the JSON-RPC protocol.
                    enum:
                      - '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: An ID to identify the request.
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the method to invoke.
                    enum:
                      - getMultipleNewAddressProofsV2
                    default: getMultipleNewAddressProofsV2
              params:
                allOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/AddressWithTree'
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getMultipleNewAddressProofsV2
              params:
                - address: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
                  tree: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              context:
                allOf:
                  - $ref: '#/components/schemas/Context'
              value:
                allOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/MerkleContextWithNewAddressProof'
            requiredProperties:
              - context
              - value
        examples:
          example:
            value:
              context:
                slot: 100
              value:
                - address: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
                  higherRangeAddress: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
                  lowElementLeafIndex: 1
                  lowerRangeAddress: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
                  merkleTree: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
                  nextIndex: 1
                  proof:
                    - 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                  root: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                  rootSeq: 1
        description: >-
          Successfully retrieved multiple new address proofs (V2) from the
          Solana compression service
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas:
    AddressWithTree:
      type: object
      required:
        - address
        - tree
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
      additionalProperties: false
    Context:
      type: object
      required:
        - slot
      properties:
        slot:
          type: integer
          default: 100
          example: 100
    Hash:
      type: string
      description: A 32-byte hash represented as a base58 string.
      example: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
    MerkleContextWithNewAddressProof:
      type: object
      required:
        - root
        - address
        - lowerRangeAddress
        - higherRangeAddress
        - nextIndex
        - proof
        - merkleTree
        - rootSeq
        - lowElementLeafIndex
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
        higherRangeAddress:
          $ref: '#/components/schemas/SerializablePubkey'
        lowElementLeafIndex:
          type: integer
          format: int32
          minimum: 0
        lowerRangeAddress:
          $ref: '#/components/schemas/SerializablePubkey'
        merkleTree:
          $ref: '#/components/schemas/SerializablePubkey'
        nextIndex:
          type: integer
          format: int32
          minimum: 0
        proof:
          type: array
          items:
            $ref: '#/components/schemas/Hash'
        root:
          $ref: '#/components/schemas/Hash'
        rootSeq:
          type: integer
          format: int64
          minimum: 0
      additionalProperties: false
    SerializablePubkey:
      type: string
      description: A Solana public key represented as a base58 string.
      default: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD
      example: 11111118F5rixNBnFLmioWZSYzjjFuAL5dyoDVzhD

````