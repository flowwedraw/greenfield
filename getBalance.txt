# getBalance

> Returns the lamport balance of the account of provided Pubkey.

## OpenAPI

````yaml openapi/rpc-http/getBalance.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The JSON-RPC protocol version.
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    enum:
                      - getBalance
                    description: The name of the RPC method to invoke.
                    default: getBalance
              params:
                allOf:
                  - type: array
                    description: Parameters for the request.
                    default:
                      - 83astBRguLMdt2h5U1Tpdq5tjFoJ6noeGwaY3mDLVcri
                    items:
                      oneOf:
                        - type: string
                          description: >-
                            The Pubkey of the account to query (base-58 encoded
                            string).
                          example: 83astBRguLMdt2h5U1Tpdq5tjFoJ6noeGwaY3mDLVcri
                        - type: object
                          description: Additional configuration options for the request.
                          properties:
                            commitment:
                              type: string
                              description: The commitment level for the request.
                              enum:
                                - processed
                                - confirmed
                                - finalized
                              example: finalized
                            minContextSlot:
                              type: integer
                              description: >-
                                The minimum slot at which the request can be
                                evaluated.
                              example: 1
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getBalance
              params:
                - 83astBRguLMdt2h5U1Tpdq5tjFoJ6noeGwaY3mDLVcri
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
              id:
                allOf:
                  - type: string
              result:
                allOf:
                  - type: object
                    properties:
                      context:
                        type: object
                        properties:
                          slot:
                            type: integer
                            description: The slot of the returned information.
                            example: 1
                      value:
                        type: integer
                        description: The account balance in lamports.
                        example: 0
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: <string>
              result:
                context:
                  slot: 1
                value: 0
        description: Successfully retrieved account balance.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    enum:
                      - '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
              id:
                allOf:
                  - &ref_2
                    type: string
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````