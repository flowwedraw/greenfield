# getAssetsByAuthority

> Returns a list of assets owned by a given authority.

## OpenAPI

````yaml openapi/das-api/getAssetsByAuthority.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The version of the JSON-RPC protocol.
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: An ID to identify the request.
                    default: '1'
              method:
                allOf:
                  - type: string
                    enum:
                      - getAssetsByAuthority
                    description: The name of the DAS method to invoke.
                    default: getAssetsByAuthority
              params:
                allOf:
                  - type: object
                    default:
                      authorityAddress: 2RtGg6fsFiiF1EQzHqbd66AhW7R5bWeQGpTbv2UMkCdW
                    properties:
                      authorityAddress:
                        type: string
                        description: The address of the owner whose assets to retrieve.
                        example: 2RtGg6fsFiiF1EQzHqbd66AhW7R5bWeQGpTbv2UMkCdW
                      page:
                        type: integer
                        description: The page of results to return.
                        example: 1
                      limit:
                        type: integer
                        description: The maximum number of assets to return.
                        example: 100
                      sortBy:
                        type: object
                        description: The sorting options for the response.
                        properties:
                          sortBy:
                            type: string
                            description: >-
                              The criteria by which the retrieved assets will be
                              sorted.
                            enum:
                              - created
                              - recent_action
                              - updated
                              - none
                          sortDirection:
                            type: string
                            description: >-
                              The direction by which the retrieved assets will
                              be sorted.
                            enum:
                              - asc
                              - desc
                      before:
                        type: string
                        description: >-
                          The cursor for paginating backwards through the
                          assets.
                        example: string
                      after:
                        type: string
                        description: The cursor for paginating forwards through the assets.
                        example: string
                      options:
                        type: object
                        description: The display options for the response.
                        properties:
                          showUnverifiedCollections:
                            type: boolean
                            description: >-
                              Displays grouping information for unverified
                              collections instead of skipping them.
                            default: false
                          showCollectionMetadata:
                            type: boolean
                            description: Displays metadata for the collection.
                            default: false
                          showGrandTotal:
                            type: boolean
                            description: >-
                              Shows the total number of assets that matched the
                              query. This will make the request slower.
                            default: false
                          showInscription:
                            type: boolean
                            description: >-
                              Displays inscription details of assets inscribed
                              on-chain.
                            default: false
                    required:
                      - authorityAddress
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getAssetsByAuthority
              params:
                authorityAddress: 2RtGg6fsFiiF1EQzHqbd66AhW7R5bWeQGpTbv2UMkCdW
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              result:
                allOf:
                  - type: object
                    properties:
                      total:
                        type: integer
                        description: The total number of assets found.
                        example: 1
                      limit:
                        type: integer
                        description: The maximum number of assets requested.
                        example: 1
                      page:
                        type: integer
                        description: The current page of results.
                        example: 1
                      items:
                        type: array
                        description: An array of assets.
                        items:
                          type: object
                          properties:
                            interface:
                              type: string
                              description: The interface of the asset.
                              example: ProgrammableNFT
                            id:
                              type: string
                              description: The ID of the asset.
                              example: JEGruwYE13mhX2wi2MGrPmeLiVyZtbBptmVy9vG3pXRC
                            content:
                              type: object
                              description: The content of the asset.
                              example:
                                $schema: https://schema.metaplex.com/nft1.0.json
                                json_uri: >-
                                  https://madlads.s3.us-west-2.amazonaws.com/json/6867.json
                                files:
                                  - uri: >-
                                      https://madlads.s3.us-west-2.amazonaws.com/images/6867.png
                                    cdn_uri: >-
                                      https://cdn.helius-rpc.com/cdn-cgi/image//https://madlads.s3.us-west-2.amazonaws.com/images/6867.png
                                    mime: image/png
                            authorities:
                              type: array
                              items:
                                type: object
                              description: The authorities of the asset.
                              example:
                                - address: 2RtGg6fsFiiF1EQzHqbd66AhW7R5bWeQGpTbv2UMkCdW
                                  scopes:
                                    - full
                            compression:
                              type: object
                              description: The compression details for asset.
                              example:
                                eligible: false
                                compressed: false
                                data_hash: ''
                                creator_hash: ''
                                asset_hash: ''
                                tree: ''
                                seq: 0
                                leaf_id: 0
                            grouping:
                              type: object
                              description: The grouping details for asset.
                              example:
                                - group_key: collection
                                  group_value: J1S9H3QjnRtBbbuD4HjPV6RpRhwuk4zKbxsnCHuTgh9w
                            royalty:
                              type: object
                              description: The royalty details for asset.
                              example:
                                royalty_model: creators
                                target: null
                                percent: 0.042
                                basis_points: 420
                                primary_sale_happened: true
                                locked: false
                            creators:
                              type: array
                              items:
                                type: object
                              description: The creators details for asset.
                              example:
                                - address: 5XvhfmRjwXkGp3jHGmaKpqeerNYjkuZZBYLVQYdeVcRv
                                  share: 0
                                  verified: true
                            ownership:
                              type: object
                              description: The ownership details for asset.
                              example:
                                frozen: true
                                delegated: false
                                delegate: null
                                ownership_model: single
                                owner: 3F21SJs4FMpsakrxmd8GjgfQZG6BN6MVsvXcm5Yc6Jcf
                            burnt: false
        examples:
          example:
            value:
              jsonrpc: '2.0'
              result:
                total: 1
                limit: 1
                page: 1
                items:
                  - interface: ProgrammableNFT
                    id: JEGruwYE13mhX2wi2MGrPmeLiVyZtbBptmVy9vG3pXRC
                    content:
                      $schema: https://schema.metaplex.com/nft1.0.json
                      json_uri: >-
                        https://madlads.s3.us-west-2.amazonaws.com/json/6867.json
                      files:
                        - uri: >-
                            https://madlads.s3.us-west-2.amazonaws.com/images/6867.png
                          cdn_uri: >-
                            https://cdn.helius-rpc.com/cdn-cgi/image//https://madlads.s3.us-west-2.amazonaws.com/images/6867.png
                          mime: image/png
                    authorities:
                      - address: 2RtGg6fsFiiF1EQzHqbd66AhW7R5bWeQGpTbv2UMkCdW
                        scopes:
                          - full
                    compression:
                      eligible: false
                      compressed: false
                      data_hash: ''
                      creator_hash: ''
                      asset_hash: ''
                      tree: ''
                      seq: 0
                      leaf_id: 0
                    grouping:
                      - group_key: collection
                        group_value: J1S9H3QjnRtBbbuD4HjPV6RpRhwuk4zKbxsnCHuTgh9w
                    royalty:
                      royalty_model: creators
                      target: null
                      percent: 0.042
                      basis_points: 420
                      primary_sale_happened: true
                      locked: false
                    creators:
                      - address: 5XvhfmRjwXkGp3jHGmaKpqeerNYjkuZZBYLVQYdeVcRv
                        share: 0
                        verified: true
                    ownership:
                      frozen: true
                      delegated: false
                      delegate: null
                      ownership_model: single
                      owner: 3F21SJs4FMpsakrxmd8GjgfQZG6BN6MVsvXcm5Yc6Jcf
                    burnt: <any>
        description: Successful response
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32602
                      message:
                        type: string
                        example: Invalid request parameters.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid request parameters.
              id: '1'
        description: >-
          Bad Request. The server could not understand the request due to
          invalid syntax.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32001
                      message:
                        type: string
                        example: Authentication failed. Missing or invalid API key.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Authentication failed. Missing or invalid API key.
              id: '1'
        description: >-
          Unauthorized. The client must authenticate itself to get the requested
          response.
    '403':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32003
                      message:
                        type: string
                        example: You do not have permission to access this resource.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: You do not have permission to access this resource.
              id: '1'
        description: Forbidden. The client does not have access rights to the content.
    '404':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32004
                      message:
                        type: string
                        example: No assets found for the specified authority.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32004
                message: No assets found for the specified authority.
              id: '1'
        description: Not Found. The server can not find the requested resource.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32029
                      message:
                        type: string
                        example: Rate limit exceeded. Please try again later.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32029
                message: Rate limit exceeded. Please try again later.
              id: '1'
        description: >-
          Too Many Requests. The user has sent too many requests in a given
          amount of time.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    example: '2.0'
              error:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: -32000
                      message:
                        type: string
                        example: An unexpected error occurred on the server.
              id:
                allOf:
                  - type: string
                    example: '1'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32000
                message: An unexpected error occurred on the server.
              id: '1'
        description: >-
          Internal Server Error. The server has encountered a situation it
          doesn't know how to handle.
  deprecated: false
  type: path
components:
  schemas: {}

````