# sendTransaction

> Submits a signed transaction to the cluster for processing.

## OpenAPI

````yaml openapi/rpc-http/sendTransaction.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The JSON-RPC protocol version.
                    example: '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    enum:
                      - sendTransaction
                    description: The name of the RPC method to invoke.
                    example: sendTransaction
                    default: sendTransaction
              params:
                allOf:
                  - type: array
                    description: Parameters for sending a transaction.
                    default:
                      - >-
                        4hXTCkRzt9WyecNzV1XPgCDfGAZzQKNxLXgynz5QDuWWPSAZBZSHptvWRL3BjCvzUXRdKvHL2b7yGrRQcWyaqsaBCncVG7BFggS8w9snUts67BSh3EqKpXLUm5UMHfD7ZBe9GhARjbNQMLJ1QD3Spr6oMTBU6EhdB4RD8CP2xUxr2u3d6fos36PD98XS6oX8TQjLpsMwncs5DAMiD4nNnR8NBfyghGCWvCVifVwvA8B8TJxE1aiyiv2L429BCWfyzAme5sZW8rDb14NeCQHhZbtNqfXhcp2tAnaAT
                    items:
                      oneOf:
                        - type: string
                          description: >-
                            The fully-signed Solana transaction encoded as a
                            base-58 string for blockchain submission.
                          example: >-
                            4hXTCkRzt9WyecNzV1XPgCDfGAZzQKNxLXgynz5QDuWWPSAZBZSHptvWRL3BjCvzUXRdKvHL2b7yGrRQcWyaqsaBCncVG7BFggS8w9snUts67BSh3EqKpXLUm5UMHfD7ZBe9GhARjbNQMLJ1QD3Spr6oMTBU6EhdB4RD8CP2xUxr2u3d6fos36PD98XS6oX8TQjLpsMwncs5DAMiD4nNnR8NBfyghGCWvCVifVwvA8B8TJxE1aiyiv2L429BCWfyzAme5sZW8rDb14NeCQHhZbtNqfXhcp2tAnaAT
                        - type: object
                          description: >-
                            Advanced configuration options for Solana
                            transaction submission and processing.
                          properties:
                            encoding:
                              type: string
                              description: >-
                                Data encoding format used for the Solana
                                transaction payload.
                              enum:
                                - base58
                                - base64
                              example: base64
                            skipPreflight:
                              type: boolean
                              description: >-
                                When true, bypasses Solana's preflight
                                transaction validation for faster submission.
                              example: false
                            preflightCommitment:
                              type: string
                              description: >-
                                Solana network commitment level for transaction
                                validation checks.
                              enum:
                                - confirmed
                                - finalized
                                - processed
                              example: finalized
                            maxRetries:
                              type: integer
                              description: >-
                                Maximum number of automatic retry attempts for
                                failed Solana transaction submissions.
                              example: 5
                            minContextSlot:
                              type: integer
                              description: >-
                                Minimum Solana blockchain slot required for
                                transaction processing.
                              example: 1000
            required: true
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: sendTransaction
              params:
                - >-
                  4hXTCkRzt9WyecNzV1XPgCDfGAZzQKNxLXgynz5QDuWWPSAZBZSHptvWRL3BjCvzUXRdKvHL2b7yGrRQcWyaqsaBCncVG7BFggS8w9snUts67BSh3EqKpXLUm5UMHfD7ZBe9GhARjbNQMLJ1QD3Spr6oMTBU6EhdB4RD8CP2xUxr2u3d6fos36PD98XS6oX8TQjLpsMwncs5DAMiD4nNnR8NBfyghGCWvCVifVwvA8B8TJxE1aiyiv2L429BCWfyzAme5sZW8rDb14NeCQHhZbtNqfXhcp2tAnaAT
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    enum:
                      - '2.0'
                    description: The JSON-RPC protocol version.
                    example: '2.0'
              id:
                allOf:
                  - type: string
                    description: Identifier matching the request.
                    example: '1'
              result:
                allOf:
                  - type: string
                    description: >-
                      The unique Solana transaction signature for tracking
                      confirmation status and transaction history.
                    example: >-
                      2id3YC2jK9G5Wo2phDx4gJVAew8DcY5NAojnVuao8rkxwPYPe8cSwE5GzhEgJA2y8fVjDEo6iR6ykBvDxrTQrtpb
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              result: >-
                2id3YC2jK9G5Wo2phDx4gJVAew8DcY5NAojnVuao8rkxwPYPe8cSwE5GzhEgJA2y8fVjDEo6iR6ykBvDxrTQrtpb
        description: Successfully sent the transaction.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````