# getEpochInfo

> Returns information about the current epoch.

## OpenAPI

````yaml openapi/rpc-http/getEpochInfo.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the RPC method to invoke.
                    enum:
                      - getEpochInfo
                    example: getEpochInfo
                    default: getEpochInfo
              params:
                allOf:
                  - type: array
                    description: Optional parameters for the request.
                    default: []
                    items:
                      type: object
                      properties:
                        commitment:
                          type: string
                          description: The commitment level for the request.
                          enum:
                            - confirmed
                            - finalized
                          example: finalized
                        minContextSlot:
                          type: integer
                          description: >-
                            The minimum slot that the request can be evaluated
                            at.
                          example: 1000
            required: true
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getEpochInfo
              params:
                - commitment: finalized
                  minContextSlot: 1000
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              id:
                allOf:
                  - type: string
                    description: Identifier matching the request.
                    example: '1'
              result:
                allOf:
                  - type: object
                    properties:
                      absoluteSlot:
                        type: integer
                        description: >-
                          The current absolute Solana slot number representing
                          global blockchain progress.
                        example: 166598
                      blockHeight:
                        type: integer
                        description: >-
                          Current Solana blockchain height in blocks, useful for
                          tracking overall chain growth.
                        example: 166500
                      epoch:
                        type: integer
                        description: >-
                          Current Solana epoch number representing the validator
                          cycle and staking period.
                        example: 27
                      slotIndex:
                        type: integer
                        description: >-
                          Current position within the epoch, showing progression
                          through the validator cycle.
                        example: 2790
                      slotsInEpoch:
                        type: integer
                        description: >-
                          Total number of slots in the current epoch, defining
                          epoch duration and validator schedule length.
                        example: 8192
                      transactionCount:
                        type: integer
                        nullable: true
                        description: >-
                          Cumulative number of successful transactions processed
                          on Solana since genesis.
                        example: 22661093
        examples:
          default:
            value:
              jsonrpc: '2.0'
              id: '1'
              result:
                absoluteSlot: 166598
                blockHeight: 166500
                epoch: 27
                slotIndex: 2790
                slotsInEpoch: 8192
                transactionCount: 22661093
        description: Successfully retrieved epoch information.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````