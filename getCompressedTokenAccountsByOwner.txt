# getCompressedTokenAccountsByOwner

> Returns the compressed token accounts owned by a certain account.

## OpenAPI

````yaml openapi/zk-compression/getCompressedTokenAccountsByOwner.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The version of the JSON-RPC protocol.
                    enum:
                      - '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: An ID to identify the request.
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the method to invoke.
                    enum:
                      - getCompressedTokenAccountsByOwner
                    default: getCompressedTokenAccountsByOwner
              params:
                allOf:
                  - type: object
                    required:
                      - owner
                    properties:
                      cursor:
                        allOf:
                          - $ref: '#/components/schemas/Base58String'
                        nullable: true
                        description: >-
                          Pagination cursor for retrieving subsequent sets of
                          compressed token accounts in Solana wallets with large
                          holdings
                      limit:
                        allOf:
                          - $ref: '#/components/schemas/Limit'
                        nullable: true
                        description: >-
                          Maximum number of compressed token accounts to return
                          per request (for pagination)
                      mint:
                        allOf:
                          - $ref: '#/components/schemas/SerializablePubkey'
                        nullable: true
                        description: >-
                          Filter compressed token accounts by specific Solana
                          token mint address
                      owner:
                        $ref: '#/components/schemas/SerializablePubkey'
                        description: >-
                          The Solana wallet address that owns the compressed
                          token accounts to be retrieved
                    additionalProperties: false
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getCompressedTokenAccountsByOwner
              params:
                cursor: 3J98t1WpEZ73CNm
                limit: 1
                mint: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                owner: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              context:
                allOf:
                  - $ref: '#/components/schemas/Context'
              value:
                allOf:
                  - $ref: '#/components/schemas/TokenAccountList'
            requiredProperties:
              - context
              - value
            additionalProperties: false
        examples:
          example:
            value:
              context:
                slot: 100
              value:
                cursor: 3J98t1WpEZ73CNm
                items:
                  - account:
                      address: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                      data:
                        data: SGVsbG8sIFdvcmxkIQ==
                        dataHash: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                        discriminator: 100
                      hash: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                      lamports: 100
                      leafIndex: 100
                      owner: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                      seq: 100
                      slotCreated: 100
                      tree: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                    tokenData:
                      amount: 100
                      delegate: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                      mint: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                      owner: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
                      state: initialized
                      tlv: SGVsbG8sIFdvcmxkIQ==
        description: >-
          Successfully retrieved compressed token accounts from the Solana
          blockchain for the specified wallet owner
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas:
    Account:
      type: object
      required:
        - hash
        - owner
        - lamports
        - tree
        - leafIndex
        - seq
        - slotCreated
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
          description: The unique address of the compressed account on Solana
        data:
          $ref: '#/components/schemas/AccountData'
          description: Account data stored in a compressed format on Solana
        hash:
          $ref: '#/components/schemas/Hash'
          description: Cryptographic hash of the compressed account data for verification
        lamports:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Balance in lamports associated with the compressed account
        leafIndex:
          $ref: '#/components/schemas/UnsignedInteger'
          description: >-
            Index position in the merkle tree where the compressed account is
            stored
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
          description: Solana program that owns this compressed account
        seq:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Sequence number for tracking updates to the compressed account
        slotCreated:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Solana blockchain slot when the compressed account was created
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
          description: Address of the merkle tree containing this compressed account
      additionalProperties: false
    AccountData:
      type: object
      required:
        - discriminator
        - data
        - dataHash
      properties:
        data:
          $ref: '#/components/schemas/Base64String'
          description: Base64-encoded data of the compressed Solana account
        dataHash:
          $ref: '#/components/schemas/Hash'
          description: Hash of the compressed account data for integrity verification
        discriminator:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Identifier for the account type in the Solana program
      additionalProperties: false
    AccountState:
      type: string
      enum:
        - initialized
        - frozen
      description: Current state of the compressed token account (initialized or frozen)
    Base58String:
      type: string
      description: A base 58 encoded string used for Solana addresses and identifiers.
      default: 3J98t1WpEZ73CNm
      example: 3J98t1WpEZ73CNm
    Base64String:
      type: string
      description: >-
        A base 64 encoded string for storing binary data in compressed Solana
        accounts.
      default: SGVsbG8sIFdvcmxkIQ==
      example: SGVsbG8sIFdvcmxkIQ==
    Context:
      type: object
      required:
        - slot
      properties:
        slot:
          type: integer
          default: 100
          example: 100
          description: Current Solana blockchain slot for this response
    Hash:
      type: string
      description: >-
        A 32-byte cryptographic hash represented as a base58 string for Solana
        data verification.
      example: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
    Limit:
      type: integer
      format: int64
      minimum: 0
      description: >-
        Maximum number of compressed token accounts to return in a single
        request
    SerializablePubkey:
      type: string
      description: >-
        A Solana public key represented as a base58 string for account and
        wallet addresses.
      default: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
      example: 11111115q4EpJaTXAZWpCg3J2zppWGSZ46KXozzo9
    TokenAcccount:
      type: object
      required:
        - account
        - tokenData
      properties:
        account:
          $ref: '#/components/schemas/Account'
          description: >-
            Compressed account information for the token account on Solana,
            including tree position and verification data
        tokenData:
          $ref: '#/components/schemas/TokenData'
          description: >-
            Specific token-related data including balance, mint, owner and
            delegation status
      additionalProperties: false
    TokenAccountList:
      type: object
      required:
        - items
      properties:
        cursor:
          $ref: '#/components/schemas/Base58String'
          description: >-
            Pagination cursor to retrieve the next set of compressed token
            accounts in subsequent requests
        items:
          type: array
          items:
            $ref: '#/components/schemas/TokenAcccount'
          description: >-
            Array of compressed token accounts owned by the specified Solana
            wallet address
    TokenData:
      type: object
      required:
        - mint
        - owner
        - amount
        - state
      properties:
        amount:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Token balance amount held in this compressed token account
        delegate:
          $ref: '#/components/schemas/SerializablePubkey'
          description: >-
            Optional delegate address authorized to perform operations on this
            compressed token account
        mint:
          $ref: '#/components/schemas/SerializablePubkey'
          description: >-
            The Solana SPL token mint address that this compressed token account
            belongs to
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
          description: The Solana wallet address that owns this compressed token account
        state:
          $ref: '#/components/schemas/AccountState'
          description: >-
            Current state of the compressed token account (initialized or
            frozen)
        tlv:
          $ref: '#/components/schemas/Base64String'
          description: >-
            Optional type-length-value encoded data for extended token account
            information
    UnsignedInteger:
      type: integer
      default: 100
      example: 100
      description: >-
        Non-negative integer value used for token amounts, sequence numbers, and
        other numeric values

````