# getProgramAccounts

> Returns all accounts owned by the provided program Pubkey.

## OpenAPI

````yaml openapi/rpc-http/getProgramAccounts.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the RPC method to invoke.
                    enum:
                      - getProgramAccounts
                    example: getProgramAccounts
                    default: getProgramAccounts
              params:
                allOf:
                  - type: array
                    description: Parameters for the method.
                    default:
                      - 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
                    items:
                      oneOf:
                        - type: string
                          description: >-
                            The Solana program public key (address) to query
                            accounts for, as a base-58 encoded string.
                          example: 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
                        - type: object
                          description: >-
                            Advanced configuration options for optimizing
                            program account queries.
                          properties:
                            commitment:
                              type: string
                              description: The commitment level for the request.
                              enum:
                                - confirmed
                                - finalized
                                - processed
                              example: finalized
                            minContextSlot:
                              type: integer
                              description: >-
                                The minimum slot that the request can be
                                evaluated at.
                              example: 1000
                            withContext:
                              type: boolean
                              description: Wrap the result in an RpcResponse JSON object.
                              example: true
                            encoding:
                              type: string
                              description: Encoding format for the returned account data.
                              enum:
                                - jsonParsed
                                - base58
                                - base64
                                - base64+zstd
                              example: jsonParsed
                            dataSlice:
                              type: object
                              description: Request a slice of the account's data.
                              properties:
                                length:
                                  type: integer
                                  description: Number of bytes to return.
                                  example: 50
                                offset:
                                  type: integer
                                  description: Byte offset from which to start reading.
                                  example: 0
                            filters:
                              type: array
                              description: >-
                                Powerful filtering system to efficiently query
                                specific Solana account data patterns.
                              items:
                                oneOf:
                                  - type: object
                                    description: >-
                                      Filter Solana accounts by their exact data
                                      size in bytes.
                                    properties:
                                      dataSize:
                                        type: integer
                                        description: >-
                                          The exact size of the account data in
                                          bytes for filtering.
                                        example: 17
                                  - type: object
                                    description: >-
                                      Filter Solana accounts by comparing data
                                      at specific memory offsets (most powerful
                                      filter).
                                    properties:
                                      memcmp:
                                        type: object
                                        description: >-
                                          Memory comparison filter for finding
                                          accounts with specific data patterns.
                                        properties:
                                          offset:
                                            type: integer
                                            description: >-
                                              Byte offset within account data to
                                              perform the comparison.
                                            example: 4
                                          bytes:
                                            type: string
                                            description: >-
                                              Base-58 encoded data to compare at the
                                              specified offset position.
                                            example: 3Mc6vR
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getProgramAccounts
              params:
                - 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              id:
                allOf:
                  - type: string
                    description: Identifier matching the request.
                    example: '1'
              result:
                allOf:
                  - oneOf:
                      - type: array
                        description: List of program accounts.
                        items:
                          type: object
                          properties:
                            pubkey:
                              type: string
                              description: The account Pubkey as a base-58 encoded string.
                              example: CxELquR1gPP8wHe33gZ4QxqGB3sZ9RSwsJ2KshVewkFY
                            account:
                              type: object
                              description: Details about the account.
                              properties:
                                lamports:
                                  type: integer
                                  description: Number of lamports assigned to this account.
                                  example: 15298080
                                owner:
                                  type: string
                                  description: >-
                                    Base-58 encoded Pubkey of the program this
                                    account is assigned to.
                                  example: 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
                                data:
                                  type: array
                                  description: >-
                                    Account data as encoded binary or JSON
                                    format.
                                  items:
                                    type: string
                                  example:
                                    - 2R9jLfiAQ9bgdcw6h8s44439
                                    - base58
                                executable:
                                  type: boolean
                                  description: Indicates if the account contains a program.
                                  example: false
                                rentEpoch:
                                  type: integer
                                  description: >-
                                    The epoch at which this account will next
                                    owe rent.
                                  example: 28
                                space:
                                  type: integer
                                  description: The data size of the account.
                                  example: 42
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              result:
                - pubkey: CxELquR1gPP8wHe33gZ4QxqGB3sZ9RSwsJ2KshVewkFY
                  account:
                    lamports: 15298080
                    owner: 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
                    data:
                      - 2R9jLfiAQ9bgdcw6h8s44439
                      - base58
                    executable: false
                    rentEpoch: 28
                    space: 42
        description: Successfully retrieved program accounts.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
                data: {}
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
                data: {}
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
                data: {}
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
                data: {}
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
                data: {}
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
                data: {}
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````