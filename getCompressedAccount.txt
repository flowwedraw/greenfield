# getCompressedAccount

> Returns the compressed account with the given address or hash.

## OpenAPI

````yaml openapi/zk-compression/getCompressedAccount.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The version of the JSON-RPC protocol.
                    enum:
                      - '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: An ID to identify the request.
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the method to invoke.
                    enum:
                      - getCompressedAccount
                    default: getCompressedAccount
              params:
                allOf:
                  - type: object
                    description: >
                      Request parameters for retrieving compressed account data
                      on Solana, including 

                      address identifier or data hash for compressed NFTs and
                      tokens
                    default:
                      address: null
                      hash: '11111111111111111111111111111111'
                    properties:
                      address:
                        type: string
                        allOf:
                          - $ref: '#/components/schemas/SerializablePubkey'
                        nullable: true
                        description: >-
                          The Solana public key of the compressed account to
                          retrieve data for
                      hash:
                        type: string
                        allOf:
                          - $ref: '#/components/schemas/Hash'
                        nullable: true
                        description: >-
                          The data hash identifier of the compressed Solana
                          account if the address is not available
                    additionalProperties: false
                    example:
                      address: null
                      hash: '11111111111111111111111111111111'
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getCompressedAccount
              params:
                address: null
                hash: '11111111111111111111111111111111'
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              context:
                allOf:
                  - $ref: '#/components/schemas/Context'
              value:
                allOf:
                  - $ref: '#/components/schemas/Account'
            requiredProperties:
              - context
            additionalProperties: false
        examples:
          example:
            value:
              context:
                slot: 100
              value:
                address: 11111112D1oxKts8YPdTJRG5FzxTNpMtWmq8hkVx3
                data:
                  data: SGVsbG8sIFdvcmxkIQ==
                  dataHash: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                  discriminator: 100
                hash: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
                lamports: 100
                leafIndex: 100
                owner: 11111112D1oxKts8YPdTJRG5FzxTNpMtWmq8hkVx3
                seq: 100
                slotCreated: 100
                tree: 11111112D1oxKts8YPdTJRG5FzxTNpMtWmq8hkVx3
        description: >-
          Successfully retrieved compressed account data from the Solana
          blockchain
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas:
    Account:
      type: object
      required:
        - hash
        - owner
        - lamports
        - tree
        - leafIndex
        - seq
        - slotCreated
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
          description: Unique identifier address for the compressed Solana account
        data:
          $ref: '#/components/schemas/AccountData'
          description: On-chain data stored in the compressed Solana account
        hash:
          $ref: '#/components/schemas/Hash'
          description: Cryptographic hash of the compressed account data for verification
        lamports:
          $ref: '#/components/schemas/UnsignedInteger'
          description: >-
            SOL balance held by this compressed account in lamports (1 SOL =
            1,000,000,000 lamports)
        leafIndex:
          $ref: '#/components/schemas/UnsignedInteger'
          description: >-
            Position index in the merkle tree where this compressed account is
            stored
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
          description: >-
            Solana program that owns this compressed account (typically the
            compression program)
        seq:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Sequence number for tracking updates to this compressed account
        slotCreated:
          $ref: '#/components/schemas/UnsignedInteger'
          description: Solana blockchain slot when this compressed account was created
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
          description: Address of the merkle tree where this compressed account is stored
      additionalProperties: false
    AccountData:
      type: object
      required:
        - discriminator
        - data
        - dataHash
      properties:
        data:
          $ref: '#/components/schemas/Base64String'
        dataHash:
          $ref: '#/components/schemas/Hash'
        discriminator:
          $ref: '#/components/schemas/UnsignedInteger'
      additionalProperties: false
    Base64String:
      type: string
      description: A base64 encoded string representing compressed account data on Solana.
      default: SGVsbG8sIFdvcmxkIQ==
      example: SGVsbG8sIFdvcmxkIQ==
    Context:
      type: object
      required:
        - slot
      properties:
        slot:
          type: integer
          default: 100
          example: 100
          description: The current Solana blockchain slot context for this request
    Hash:
      type: string
      description: >-
        A 32-byte cryptographic hash represented as a base58 string, used for
        Solana compressed account verification.
      example: 11111112cMQwSC9qirWGjZM6gLGwW69X22mqwLLGP
    SerializablePubkey:
      type: string
      description: >-
        A Solana public key represented as a base58 encoded string, used to
        identify accounts, programs, and users.
      default: 11111112D1oxKts8YPdTJRG5FzxTNpMtWmq8hkVx3
      example: 11111112D1oxKts8YPdTJRG5FzxTNpMtWmq8hkVx3
    UnsignedInteger:
      type: integer
      default: 100
      example: 100
      description: >-
        A non-negative integer value used for various numeric parameters in
        Solana compressed accounts

````