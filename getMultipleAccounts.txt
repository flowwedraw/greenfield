# getMultipleAccounts

> Returns the account information for a list of Pubkeys.

## OpenAPI

````yaml openapi/rpc-http/getMultipleAccounts.yaml post /
paths:
  path: /
  method: post
  servers:
    - url: https://mainnet.helius-rpc.com
      description: Mainnet RPC endpoint
    - url: https://devnet.helius-rpc.com
      description: Devnet RPC endpoint
  request:
    security:
      - title: ApiKeyQuery
        parameters:
          query:
            api-key:
              type: apiKey
              description: >-
                Your Helius API key. You can get one for free in the
                [dashboard](https://dashboard.helius.dev/api-keys).
          header: {}
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
                    default: '2.0'
              id:
                allOf:
                  - type: string
                    description: A unique identifier for the request.
                    example: '1'
                    default: '1'
              method:
                allOf:
                  - type: string
                    description: The name of the RPC method to invoke.
                    enum:
                      - getMultipleAccounts
                    example: getMultipleAccounts
                    default: getMultipleAccounts
              params:
                allOf:
                  - type: array
                    description: Parameters for the method.
                    default:
                      - - vines1vzrYbzLMRdu58ou5XTby4qAqVRLmqo36NKPTg
                        - 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
                    items:
                      oneOf:
                        - type: array
                          description: >-
                            Array of Solana account addresses (up to 100) to
                            fetch in a single optimized batch request.
                          items:
                            type: string
                          example:
                            - vines1vzrYbzLMRdu58ou5XTby4qAqVRLmqo36NKPTg
                            - 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
                        - type: object
                          description: >-
                            Advanced configuration options for customizing the
                            batch account data retrieval.
                          properties:
                            commitment:
                              type: string
                              description: The commitment level for the request.
                              enum:
                                - confirmed
                                - finalized
                                - processed
                              example: finalized
                            minContextSlot:
                              type: integer
                              description: >-
                                The minimum slot that the request can be
                                evaluated at.
                              example: 1000
                            dataSlice:
                              type: object
                              description: Request a slice of the account's data.
                              properties:
                                length:
                                  type: integer
                                  description: Number of bytes to return.
                                  example: 50
                                offset:
                                  type: integer
                                  description: Byte offset from which to start reading.
                                  example: 0
                            encoding:
                              type: string
                              description: Encoding format for the returned account data.
                              enum:
                                - jsonParsed
                                - base58
                                - base64
                                - base64+zstd
                              example: base58
            required: true
            requiredProperties:
              - jsonrpc
              - id
              - method
              - params
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              method: getMultipleAccounts
              params:
                - - vines1vzrYbzLMRdu58ou5XTby4qAqVRLmqo36NKPTg
                  - 4fYNw3dojWmQ4dXtSGE9epjRGy9pFSx62YypT7avPYvA
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              id:
                allOf:
                  - type: string
                    description: Identifier matching the request.
                    example: '1'
              result:
                allOf:
                  - type: object
                    description: Accounts information with context.
                    properties:
                      context:
                        type: object
                        description: Context of the response.
                        properties:
                          apiVersion:
                            type: string
                            description: API version of the response.
                            example: 2.0.15
                          slot:
                            type: integer
                            description: The slot at which the data was fetched.
                            example: 341197247
                      value:
                        type: array
                        description: Array of account details.
                        items:
                          oneOf:
                            - type: 'null'
                              description: Null if the account doesn't exist.
                            - type: object
                              description: Account details.
                              properties:
                                lamports:
                                  type: integer
                                  description: Number of lamports assigned to the account.
                                  example: 88849814690250
                                owner:
                                  type: string
                                  description: >-
                                    Base-58 encoded Pubkey of the program the
                                    account is assigned to.
                                  example: '11111111111111111111111111111111'
                                data:
                                  type: array
                                  description: >-
                                    Account data as encoded binary or JSON
                                    format.
                                  items:
                                    type: string
                                  example:
                                    - ''
                                    - base58
                                executable:
                                  type: boolean
                                  description: Indicates if the account contains a program.
                                  example: false
                                rentEpoch:
                                  type: integer
                                  description: >-
                                    Epoch at which this account will next owe
                                    rent.
                                  example: 18446744073709552000
                                space:
                                  type: integer
                                  description: Data size of the account.
                                  example: 0
        examples:
          example:
            value:
              jsonrpc: '2.0'
              id: '1'
              result:
                context:
                  apiVersion: 2.0.15
                  slot: 341197247
                value:
                  - null
        description: Successfully retrieved the account details.
    '400':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - &ref_0
                    type: string
                    description: The JSON-RPC protocol version.
                    enum:
                      - '2.0'
                    example: '2.0'
              error:
                allOf:
                  - &ref_1
                    type: object
                    properties:
                      code:
                        type: integer
                        description: The error code.
                        example: -32602
                      message:
                        type: string
                        description: The error message.
                      data:
                        type: object
                        description: Additional data about the error.
              id:
                allOf:
                  - &ref_2
                    type: string
                    description: Identifier matching the request.
                    example: '1'
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32602
                message: Invalid params
                data:
                  additionalInfo: >-
                    Please check the request parameters and ensure they are
                    valid.
              id: '1'
        description: Bad Request - Invalid request parameters or malformed request.
    '401':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32001
                message: Unauthorized
                data:
                  additionalInfo: Please verify your API key and try again.
              id: '1'
        description: Unauthorized - Invalid or missing API key.
    '429':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32005
                message: Too many requests
                data:
                  additionalInfo: >-
                    You have exceeded the allowed number of requests. Please
                    wait and try again later.
              id: '1'
        description: Too Many Requests - Rate limit exceeded.
    '500':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32603
                message: Internal error
                data:
                  additionalInfo: >-
                    An unexpected error occurred on the server. Please try again
                    later or contact support.
              id: '1'
        description: Internal Server Error - An error occurred on the server.
    '503':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32002
                message: Service unavailable
                data:
                  additionalInfo: >-
                    The service is currently unavailable. Please try again later
                    or contact support.
              id: '1'
        description: Service Unavailable - The service is temporarily unavailable.
    '504':
      application/json:
        schemaArray:
          - type: object
            properties:
              jsonrpc:
                allOf:
                  - *ref_0
              error:
                allOf:
                  - *ref_1
              id:
                allOf:
                  - *ref_2
            refIdentifier: '#/components/schemas/ErrorResponse'
        examples:
          example:
            value:
              jsonrpc: '2.0'
              error:
                code: -32003
                message: Gateway timeout
                data:
                  additionalInfo: >-
                    The request timed out. Please try again later or contact
                    support.
              id: '1'
        description: Gateway Timeout - The request timed out.
  deprecated: false
  type: path
components:
  schemas: {}

````